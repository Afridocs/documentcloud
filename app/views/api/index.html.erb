<%
  @title        = "API Documentation"
  @bodyclass    = "documentation"
%>

<div id="docs" class="">

  <h1>The DocumentCloud API</h1>

  <p>
    Search the full DocumentCloud index or batch upload your documents directly 
    with our API, no key required. Performing searches from JavaScript is fair 
    game, but please be considerate, and don't hammer our servers. 
  </p>
  
  <h2><span id="search">GET /api/search.json</span></h2>

  <p>
    Search the catalog of public documents. This method can be used to scrape
    the public documents from your account for embedding purposes, or to enable
    searches of your archive of uploaded documents directly from your own website.
  </p>

  <table>
    <thead>
      <tr>
        <th class="gradient_light">Parameter</th>
        <th class="gradient_light">Description</th>
        <th class="gradient_light">Example</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="param">q</td>
        <td class="desc">the search query</td>
        <td class="ex">group:daily-tribune title:nuclear</td>
      </tr>
      <tr class="alt">
        <td class="param">page</td>
        <td class="desc">response page number</td>
        <td class="ex">3 (defaults to 1)</td>
      </tr>
      <tr>
        <td class="param">sections</td>
        <td class="desc">include document sections in the results</td>
        <td class="ex">true (defaults to false)</td>
      </tr>
      <tr class="alt">
        <td class="param">annotations</td>
        <td class="desc">include document annotations in the results</td>
        <td class="ex">true (defaults to false)</td>
      </tr>
    </tbody>
  </table>

  <h3>Example</h3>

  <pre>
/api/search.json?q=obama&amp;page=2</pre>

  <p>
    Use the search form below to try queries and see what the resulting JSON
    looks like.
  </p>

  <form id="search_form" action="about:blank" autocomplete="off">
    <div id="run_search" class="minibutton default">Search</div>
    <div class="text_input">
      <div class="background">
        <div class="inner">
          <input type="text" name="q" id="q" />
        </div>
      </div>
    </div>
    <label for="q">
      Search Query:<br /><span class="example">ex: "person:geithner"</span>
    </label>
  </form>

  <pre id="search_results"></pre>
  
  <h3>Tips</h3>

  <ul>
    <li>
      If you'd like to get back search results with more than ten documents on
      a page, pass the <tt>per_page</tt> parameter. A maximum of 1000 documents
      will be returned at a time.
    </li>
  </ul>
  
  <h2><span id="upload">POST /api/upload.json</span></h2>
  
  <p>
    We offer a rudimentary API for bulk uploads. It exposes the same API that
    we use internally, but wraps it in HTTP Basic Authentication. Documents 
    will be uploaded into the authenticated account.
  </p>
  
  <table>
    <thead>
      <tr>
        <th class="gradient_light">Parameter</th>
        <th class="gradient_light">Description</th>
        <th class="gradient_light">Example</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="param">file</td>
        <td class="desc">(required) the path to the document itself</td>
        <td class="ex">--</td>
      </tr>
      <tr class="alt">
        <td class="param">title</td>
        <td class="desc">(required) the document's canonical title</td>
        <td class="ex">2008 Blagojevich Tax Return</td>
      </tr>
      <tr>
        <td class="param">source</td>
        <td class="desc">(optional) the source who produced the document</td>
        <td class="ex">U.S. Attorney's Office</td>
      </tr>
      <tr class="alt">
        <td class="param">description</td>
        <td class="desc">(optional) a paragraph of detailed description</td>
        <td class="ex">This prosecution exhibit is the 2008 joint tax return for Rod and Patti Blagojevich. It shows their total income for the year was $284,000.</td>
      </tr>
      <tr>
        <td class="param">related_article</td>
        <td class="desc">(optional) the URL of the article associated with the document</td>
        <td class="ex">http://example.com/news/blago/2010-5-3.html</td>
      </tr>
      <tr class="alt">
        <td class="param">access</td>
        <td class="desc">(optional) one of "public", "private", "organization", defaults to "private"</td>
        <td class="ex">public</td>
      </tr>
    </tbody>
  </table>
  
  
  <h3>Tips</h3>

  <ul>
    <li>Please ensure that you send the request properly encoded as "multipart/form-data".</li>
    <li>Review your uploaded files and add a source and description if you didn't .</li>
    <li>Unless you are using SSL, your username, password and documents are sent in cleartext. Use <b>https://</b> to ensure that your connection is encrypted.</li>
  </ul>
  
  <h3>Example</h3>
  <p>Using Ruby's RestClient library you could do:</p>
  <pre>
    RestClient.post('http://YOURNAME%40EXAMPLE.COM:YOURPASSWORD@www.documentcloud.org/api/upload.json',
      :file => File.new('/full/path/to/document/document.pdf','rb'),
      :title => "2008 Blagojevich Tax Return",
      :source => "U.S. Attorney's Office",
      :access => 'private'
    )</pre>
    
  <h2><span id="docinfo">GET /api/documents/[id].json</span></h2>

  <p>
    Retrieve the canonical JSON representation of a particular document, as 
    specified by the document id (usually something like: <b>218-madoff-sec-report</b>).
  </p>

  <h3>Example Response</h3>

  <pre>
{"document":{
  "id":"207-american-academy-v-napolitano",
  "title":"American Academy v. Napolitano",
  "pages":52,
  "description":"Appeal from the judgment of the United States District Court, granting summary judgment...",
  "resources":{
    "pdf":"http://s3.documentcloud.org/documents/207/american-academy-v-napolitano.pdf",
    "text":"http://s3.documentcloud.org/documents/207/american-academy-v-napolitano.txt",
    "thumbnail":"http://s3.documentcloud.org/documents/207/pages/american-academy-v-napolitano-p1-thumbnail.gif",
    "search":"http://s3.documentcloud.org/207/search.json?q={query}",
    "page":{
      "text":"http://s3.documentcloud.org/documents/207/pages/american-academy-v-napolitano-p{page}.txt",
      "image":"http://s3.documentcloud.org/asset_store/documents/207/pages/american-academy-v-napolitano-p{page}-{size}.gif"
    },
    "related_article":"http://example.com/article.html"
  },
  "sections":[],
  "annotations":[]
}}</pre>
    
  <h2><span id="update">PUT /api/documents/[id].json</span></h2>
  
  <p>
    Update a document's <b>title</b>, <b>source</b>, <b>description</b>,
    <b>related article</b>, or <b>access level</b> with this method. Reference
    your document by its id (usually something like: <b>218-madoff-sec-report</b>).
  </p>
  
  <table>
    <thead>
      <tr>
        <th class="gradient_light">Parameter</th>
        <th class="gradient_light">Description</th>
        <th class="gradient_light">Example</th>
      </tr>
    </thead>
    <tbody>
      <tr class="alt">
        <td class="param">title</td>
        <td class="desc">(optional) the document's canonical title</td>
        <td class="ex">2008 Blagojevich Tax Return</td>
      </tr>
      <tr>
        <td class="param">source</td>
        <td class="desc">(optional) the source who produced the document</td>
        <td class="ex">U.S. Attorney's Office</td>
      </tr>
      <tr class="alt">
        <td class="param">description</td>
        <td class="desc">(optional) a paragraph of detailed description</td>
        <td class="ex">This prosecution exhibit is the 2008 joint tax return for Rod and Patti Blagojevich. It shows their total income for the year was $284,000.</td>
      </tr>
      <tr>
        <td class="param">related_article</td>
        <td class="desc">(optional) the URL of the article associated with the document</td>
        <td class="ex">http://example.com/news/blago/2010-5-3.html</td>
      </tr>
      <tr class="alt">
        <td class="param">access</td>
        <td class="desc">(optional) one of "public", "private", "organization"</td>
        <td class="ex">public</td>
      </tr>
    </tbody>
  </table>
  
  <p>
    The response value of this method will be the JSON representation of your
    document (as seen in the GET method above), with all updates applied.
  </p>
  
  <h3>Tips</h3>

  <ul>
    <li>
      If your HTTP client is unable to create a PUT request, you can send it as
      a POST, and add an extra parameter: <tt>_method=put</tt>
    </li>
  </ul>
  
  <h2><span id="delete">DELETE /api/documents/[id].json</span></h2>
  
  <p>
    Delete a document from DocumentCloud. You must be authenticated as the
    owner of the document for this method to work.
  </p>
  
  <h3>Tips</h3>

  <ul>
    <li>
      If your HTTP client is unable to create a DELETE request, you can send it as
      a POST, and add an extra parameter: <tt>_method=delete</tt>
    </li>
  </ul>
  
  <h2><span id="docinfo">GET /api/documents/[id]/entities.json</span></h2>
  
  <p>
    Retrieve the JSON for all of the entities that a particular document contains,
    specified by the document id (usually something like: <b>218-madoff-sec-report</b>).
    Entities are ordered by their relevance to the document as determined by
    OpenCalais.
  </p>
  
  <h3>Example Response</h3>

<pre>
{
  "entities":{
    "person":[
      { "value":"Ramadan Aff", "relevance":0.72 },
      { "value":"Sarah Normand", "relevance":0.612 },
      ...
    ],
    "organization":[
      { "value":"Supreme Court", "relevance":0.619 },
      { "value":"Hamas", "relevance":0.581 },
      ...
    ]
    ...
  }
}
</pre>
    
  <h2><span id="projects">GET /api/projects.json</span></h2>
  
  <p>
    Retrieve a list of project names and document ids. You must
    use HTTP Basic Authentication (preferably over SSL) in order to make this 
    request. The projects listed belong to the authenticated account.
  </p>
  
  <h3>Example Response</h3>
  
  <pre>
{"projects": [
  { 
    "id": 5,
    "title": "Literate Programming",
    "document_ids":[
      "103-literate-programming-a-practioners-view",
      "104-reverse-literate-programming"
    ] 
  },
  ...
]}</pre>

</div>
<script type="text/javascript">
  $(document).ready(function() {
    $('#search_form').submit(function(e) {
      e.preventDefault();
      $.getJSON('/api/search', {q : $('#q').val()}, function(resp) {
        $('#search_results').text(JSON.stringify(resp, null, 2));
      });
    });
    $('#run_search').click(function() {
      $('#search_form').submit();
    });
  });
</script>
